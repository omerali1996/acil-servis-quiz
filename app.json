{
  "expo": {
    "name": "MedicalQuizApp",
    "slug": "medical-quiz-app",
    "version": "1.0.0",
    "platforms": [
      "ios",
      "android"
    ],
    "entryPoint": "App.js",
    "reactNativeCode": "\nimport React, { useState, useEffect } from 'react';\nimport { SafeAreaView, View, Text, TextInput, Button, ScrollView, StyleSheet } from 'react-native';\n\nexport default function App() {\n  const [cases, setCases] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [userQuestion, setUserQuestion] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [showFizik, setShowFizik] = useState(false);\n  const [guess, setGuess] = useState('');\n\n  const BACKEND_URL = \"https://acil-servis-quiz.onrender.com\";\n\n  useEffect(() => {\n    fetch(`${BACKEND_URL}/cases`)\n      .then(res => res.json())\n      .then(data => setCases(data));\n  }, []);\n\n  const askQuestion = async () => {\n    if (!userQuestion) return;\n\n    const response = await fetch(`${BACKEND_URL}/ask`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ question: userQuestion, hastalik: cases[currentIndex].ad })\n    });\n\n    const data = await response.json();\n    setChatHistory([...chatHistory, { question: userQuestion, cevap: data.cevap }]);\n    setUserQuestion('');\n  };\n\n  const nextCase = () => {\n    setCurrentIndex(currentIndex + 1);\n    setChatHistory([]);\n    setShowFizik(false);\n    setGuess('');\n  };\n\n  if (cases.length === 0) return <Text>Loading...</Text>;\n  if (currentIndex >= cases.length) return <Text>🎉 Tüm vakalar tamamlandı!</Text>;\n\n  const currentCase = cases[currentIndex];\n\n  return (\n    <SafeAreaView style={{ flex: 1, padding: 20 }}>\n      <ScrollView style={{ flex: 1 }}>\n        <Text style={styles.title}>📖 Vaka: {currentCase.hikaye}</Text>\n        {chatHistory.map((c, i) => (\n          <View key={i} style={styles.chatBox}>\n            <Text>💬 Sorun: {c.question}</Text>\n            <Text>🩺 Hasta: {c.cevap}</Text>\n          </View>\n        ))}\n      </ScrollView>\n\n      {!showFizik ? (\n        <View style={{ marginTop: 10 }}>\n          <TextInput\n            placeholder=\"Sorunuzu yazın\"\n            value={userQuestion}\n            onChangeText={setUserQuestion}\n            style={styles.input}\n          />\n          <Button title=\"Soruyu Gönder\" onPress={askQuestion} />\n          <Button title=\"Fizik Muayene\" onPress={() => setShowFizik(true)} />\n        </View>\n      ) : (\n        <View style={{ marginTop: 10 }}>\n          <Text>👉 Fizik Muayene: {currentCase.klinik_bulgular.fizik_muayene}</Text>\n          <Text>👉 Radyolojik Görüntüler: {currentCase.klinik_bulgular.radyolojik_goruntuler}</Text>\n          <Text>👉 EKG: {currentCase.klinik_bulgular.ekg}</Text>\n          <Text>👉 Tetkikler: {currentCase.klinik_bulgular.tetkikler}</Text>\n          <TextInput\n            placeholder=\"Tahmininizi yazın\"\n            value={guess}\n            onChangeText={setGuess}\n            style={styles.input}\n          />\n          <Button title=\"Tahmin Et\" onPress={() => {\n            if (guess.toLowerCase() === currentCase.ad.toLowerCase()) {\n              alert(\"✅ Doğru! Sonraki vakaya geçiliyor.\");\n              nextCase();\n            } else {\n              alert(`❌ Yanlış! Oyun bitti. Doğru cevap: ${currentCase.ad}`);\n            }\n          }} />\n        </View>\n      )}\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: { fontSize: 18, fontWeight: \"bold\", marginBottom: 10 },\n  chatBox: { marginBottom: 10, padding: 5, backgroundColor: \"#f0f0f0\", borderRadius: 5 },\n  input: { borderWidth: 1, borderColor: \"#ccc\", padding: 8, marginBottom: 5, borderRadius: 5 }\n});\n"
  }
}